// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/movie.proto

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type MoviesList struct {
	Movies []*MoviesList_Movie `protobuf:"bytes,1,rep,name=movies" json:"movies,omitempty"`
}

func (m *MoviesList) Reset()                    { *m = MoviesList{} }
func (m *MoviesList) String() string            { return proto1.CompactTextString(m) }
func (*MoviesList) ProtoMessage()               {}
func (*MoviesList) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *MoviesList) GetMovies() []*MoviesList_Movie {
	if m != nil {
		return m.Movies
	}
	return nil
}

type MoviesList_IMDBMeta struct {
	Genre      string  `protobuf:"bytes,1,opt,name=genre" json:"genre,omitempty"`
	MpaaRating string  `protobuf:"bytes,2,opt,name=mpaa_rating,json=mpaaRating" json:"mpaa_rating,omitempty"`
	Score      float32 `protobuf:"fixed32,3,opt,name=score" json:"score,omitempty"`
}

func (m *MoviesList_IMDBMeta) Reset()                    { *m = MoviesList_IMDBMeta{} }
func (m *MoviesList_IMDBMeta) String() string            { return proto1.CompactTextString(m) }
func (*MoviesList_IMDBMeta) ProtoMessage()               {}
func (*MoviesList_IMDBMeta) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 0} }

func (m *MoviesList_IMDBMeta) GetGenre() string {
	if m != nil {
		return m.Genre
	}
	return ""
}

func (m *MoviesList_IMDBMeta) GetMpaaRating() string {
	if m != nil {
		return m.MpaaRating
	}
	return ""
}

func (m *MoviesList_IMDBMeta) GetScore() float32 {
	if m != nil {
		return m.Score
	}
	return 0
}

type MoviesList_RottenTomatoesMeta struct {
	TomatoScore        int32  `protobuf:"varint,1,opt,name=tomato_score,json=tomatoScore" json:"tomato_score,omitempty"`
	PopcornScore       int32  `protobuf:"varint,2,opt,name=popcorn_score,json=popcornScore" json:"popcorn_score,omitempty"`
	TheaterReleaseDate string `protobuf:"bytes,3,opt,name=theater_release_date,json=theaterReleaseDate" json:"theater_release_date,omitempty"`
	MpaaRating         string `protobuf:"bytes,4,opt,name=mpaa_rating,json=mpaaRating" json:"mpaa_rating,omitempty"`
	Synopsis           string `protobuf:"bytes,5,opt,name=synopsis" json:"synopsis,omitempty"`
	SynopsisType       string `protobuf:"bytes,6,opt,name=synopsis_type,json=synopsisType" json:"synopsis_type,omitempty"`
	Runtime            string `protobuf:"bytes,7,opt,name=runtime" json:"runtime,omitempty"`
}

func (m *MoviesList_RottenTomatoesMeta) Reset()         { *m = MoviesList_RottenTomatoesMeta{} }
func (m *MoviesList_RottenTomatoesMeta) String() string { return proto1.CompactTextString(m) }
func (*MoviesList_RottenTomatoesMeta) ProtoMessage()    {}
func (*MoviesList_RottenTomatoesMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{0, 1}
}

func (m *MoviesList_RottenTomatoesMeta) GetTomatoScore() int32 {
	if m != nil {
		return m.TomatoScore
	}
	return 0
}

func (m *MoviesList_RottenTomatoesMeta) GetPopcornScore() int32 {
	if m != nil {
		return m.PopcornScore
	}
	return 0
}

func (m *MoviesList_RottenTomatoesMeta) GetTheaterReleaseDate() string {
	if m != nil {
		return m.TheaterReleaseDate
	}
	return ""
}

func (m *MoviesList_RottenTomatoesMeta) GetMpaaRating() string {
	if m != nil {
		return m.MpaaRating
	}
	return ""
}

func (m *MoviesList_RottenTomatoesMeta) GetSynopsis() string {
	if m != nil {
		return m.Synopsis
	}
	return ""
}

func (m *MoviesList_RottenTomatoesMeta) GetSynopsisType() string {
	if m != nil {
		return m.SynopsisType
	}
	return ""
}

func (m *MoviesList_RottenTomatoesMeta) GetRuntime() string {
	if m != nil {
		return m.Runtime
	}
	return ""
}

type MoviesList_Movie struct {
	Title              string                         `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Image              string                         `protobuf:"bytes,2,opt,name=image" json:"image,omitempty"`
	ImdbMeta           *MoviesList_IMDBMeta           `protobuf:"bytes,3,opt,name=imdb_meta,json=imdbMeta" json:"imdb_meta,omitempty"`
	RottenTomatoesMeta *MoviesList_RottenTomatoesMeta `protobuf:"bytes,4,opt,name=rotten_tomatoes_meta,json=rottenTomatoesMeta" json:"rotten_tomatoes_meta,omitempty"`
}

func (m *MoviesList_Movie) Reset()                    { *m = MoviesList_Movie{} }
func (m *MoviesList_Movie) String() string            { return proto1.CompactTextString(m) }
func (*MoviesList_Movie) ProtoMessage()               {}
func (*MoviesList_Movie) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 2} }

func (m *MoviesList_Movie) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *MoviesList_Movie) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *MoviesList_Movie) GetImdbMeta() *MoviesList_IMDBMeta {
	if m != nil {
		return m.ImdbMeta
	}
	return nil
}

func (m *MoviesList_Movie) GetRottenTomatoesMeta() *MoviesList_RottenTomatoesMeta {
	if m != nil {
		return m.RottenTomatoesMeta
	}
	return nil
}

type PostMoviesResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *PostMoviesResponse) Reset()                    { *m = PostMoviesResponse{} }
func (m *PostMoviesResponse) String() string            { return proto1.CompactTextString(m) }
func (*PostMoviesResponse) ProtoMessage()               {}
func (*PostMoviesResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *PostMoviesResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type Search struct {
	Text string `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
}

func (m *Search) Reset()                    { *m = Search{} }
func (m *Search) String() string            { return proto1.CompactTextString(m) }
func (*Search) ProtoMessage()               {}
func (*Search) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *Search) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func init() {
	proto1.RegisterType((*MoviesList)(nil), "proto.MoviesList")
	proto1.RegisterType((*MoviesList_IMDBMeta)(nil), "proto.MoviesList.IMDBMeta")
	proto1.RegisterType((*MoviesList_RottenTomatoesMeta)(nil), "proto.MoviesList.RottenTomatoesMeta")
	proto1.RegisterType((*MoviesList_Movie)(nil), "proto.MoviesList.Movie")
	proto1.RegisterType((*PostMoviesResponse)(nil), "proto.PostMoviesResponse")
	proto1.RegisterType((*Search)(nil), "proto.Search")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for MovieService service

type MovieServiceClient interface {
	Autocomplete(ctx context.Context, in *Search, opts ...grpc.CallOption) (*MoviesList, error)
	BulkIndex(ctx context.Context, in *MoviesList, opts ...grpc.CallOption) (*PostMoviesResponse, error)
	Get(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*MoviesList, error)
}

type movieServiceClient struct {
	cc *grpc.ClientConn
}

func NewMovieServiceClient(cc *grpc.ClientConn) MovieServiceClient {
	return &movieServiceClient{cc}
}

func (c *movieServiceClient) Autocomplete(ctx context.Context, in *Search, opts ...grpc.CallOption) (*MoviesList, error) {
	out := new(MoviesList)
	err := grpc.Invoke(ctx, "/proto.MovieService/Autocomplete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *movieServiceClient) BulkIndex(ctx context.Context, in *MoviesList, opts ...grpc.CallOption) (*PostMoviesResponse, error) {
	out := new(PostMoviesResponse)
	err := grpc.Invoke(ctx, "/proto.MovieService/BulkIndex", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *movieServiceClient) Get(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*MoviesList, error) {
	out := new(MoviesList)
	err := grpc.Invoke(ctx, "/proto.MovieService/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for MovieService service

type MovieServiceServer interface {
	Autocomplete(context.Context, *Search) (*MoviesList, error)
	BulkIndex(context.Context, *MoviesList) (*PostMoviesResponse, error)
	Get(context.Context, *google_protobuf1.Empty) (*MoviesList, error)
}

func RegisterMovieServiceServer(s *grpc.Server, srv MovieServiceServer) {
	s.RegisterService(&_MovieService_serviceDesc, srv)
}

func _MovieService_Autocomplete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Search)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MovieServiceServer).Autocomplete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.MovieService/Autocomplete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MovieServiceServer).Autocomplete(ctx, req.(*Search))
	}
	return interceptor(ctx, in, info, handler)
}

func _MovieService_BulkIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MoviesList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MovieServiceServer).BulkIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.MovieService/BulkIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MovieServiceServer).BulkIndex(ctx, req.(*MoviesList))
	}
	return interceptor(ctx, in, info, handler)
}

func _MovieService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf1.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MovieServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.MovieService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MovieServiceServer).Get(ctx, req.(*google_protobuf1.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _MovieService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.MovieService",
	HandlerType: (*MovieServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Autocomplete",
			Handler:    _MovieService_Autocomplete_Handler,
		},
		{
			MethodName: "BulkIndex",
			Handler:    _MovieService_BulkIndex_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _MovieService_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/movie.proto",
}

func init() { proto1.RegisterFile("proto/movie.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 558 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x53, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x95, 0xd3, 0x24, 0x4d, 0x26, 0xae, 0x50, 0x57, 0x15, 0x18, 0xb7, 0x88, 0xe2, 0x72, 0xa8,
	0x38, 0xd8, 0xa8, 0x1c, 0x90, 0xb8, 0xb5, 0x2a, 0x42, 0x95, 0x88, 0x84, 0x36, 0x05, 0x8e, 0xd6,
	0xc6, 0x19, 0x52, 0x8b, 0xd8, 0x6b, 0xed, 0x4e, 0xaa, 0x46, 0x88, 0x0b, 0x47, 0xae, 0xfc, 0x12,
	0x7f, 0xc0, 0x2f, 0x70, 0xe2, 0x07, 0xb8, 0x22, 0xcf, 0xda, 0x05, 0xc9, 0x9c, 0x3c, 0xef, 0xcd,
	0x9b, 0xe7, 0x99, 0x59, 0x0d, 0xec, 0x56, 0x46, 0x93, 0x4e, 0x0a, 0x7d, 0x9d, 0x63, 0xcc, 0xb1,
	0x18, 0xf0, 0x27, 0x3c, 0x58, 0x6a, 0xbd, 0x5c, 0x61, 0xa2, 0xaa, 0x3c, 0x51, 0x65, 0xa9, 0x49,
	0x51, 0xae, 0x4b, 0xeb, 0x44, 0xe1, 0x7e, 0x93, 0x65, 0x34, 0x5f, 0x7f, 0x48, 0xb0, 0xa8, 0x68,
	0xe3, 0x92, 0xd1, 0xaf, 0x3e, 0xc0, 0xb4, 0x76, 0xb4, 0xaf, 0x73, 0x4b, 0x22, 0x81, 0x21, 0xfb,
	0xdb, 0xc0, 0x3b, 0xdc, 0x3a, 0x9e, 0x9c, 0xdc, 0x73, 0xb2, 0xf8, 0xaf, 0xc4, 0x85, 0xb2, 0x91,
	0x85, 0xef, 0x61, 0x74, 0x31, 0x3d, 0x3f, 0x9b, 0x22, 0x29, 0xb1, 0x07, 0x83, 0x25, 0x96, 0x06,
	0x03, 0xef, 0xd0, 0x3b, 0x1e, 0x4b, 0x07, 0xc4, 0x43, 0x98, 0x14, 0x95, 0x52, 0xa9, 0x51, 0x94,
	0x97, 0xcb, 0xa0, 0xc7, 0x39, 0xa8, 0x29, 0xc9, 0x4c, 0x5d, 0x66, 0x33, 0x6d, 0x30, 0xd8, 0x3a,
	0xf4, 0x8e, 0x7b, 0xd2, 0x81, 0xf0, 0x6b, 0x0f, 0x84, 0xd4, 0x44, 0x58, 0x5e, 0xea, 0x42, 0x91,
	0x46, 0xcb, 0xff, 0x78, 0x04, 0x3e, 0x31, 0x4e, 0x5d, 0x4d, 0xfd, 0xab, 0x81, 0x9c, 0x38, 0x6e,
	0x56, 0x53, 0xe2, 0x08, 0x76, 0x2a, 0x5d, 0x65, 0xda, 0x94, 0x8d, 0xa6, 0xc7, 0x1a, 0xbf, 0x21,
	0x9d, 0xe8, 0x29, 0xec, 0xd1, 0x15, 0x2a, 0x42, 0x93, 0x1a, 0x5c, 0xa1, 0xb2, 0x98, 0x2e, 0x14,
	0xb9, 0x1e, 0xc6, 0x52, 0x34, 0x39, 0xe9, 0x52, 0xe7, 0x8a, 0x3a, 0x73, 0xf4, 0x3b, 0x73, 0x84,
	0x30, 0xb2, 0x9b, 0x52, 0x57, 0x36, 0xb7, 0xc1, 0x80, 0xb3, 0xb7, 0xb8, 0xee, 0xa9, 0x8d, 0x53,
	0xda, 0x54, 0x18, 0x0c, 0x59, 0xe0, 0xb7, 0xe4, 0xe5, 0xa6, 0x42, 0x11, 0xc0, 0xb6, 0x59, 0x97,
	0x94, 0x17, 0x18, 0x6c, 0x73, 0xba, 0x85, 0xe1, 0x77, 0x0f, 0x06, 0xbc, 0xf7, 0x7a, 0x59, 0x94,
	0xd3, 0xea, 0x76, 0xc7, 0x0c, 0x6a, 0x36, 0x2f, 0xd4, 0x12, 0x9b, 0xed, 0x3a, 0x20, 0x9e, 0xc3,
	0x38, 0x2f, 0x16, 0xf3, 0xb4, 0x40, 0x52, 0x3c, 0xd8, 0xe4, 0x24, 0xec, 0xbe, 0x67, 0xfb, 0x7c,
	0x72, 0x54, 0x8b, 0x79, 0xc9, 0xef, 0x60, 0xcf, 0xf0, 0xea, 0x53, 0x6a, 0x76, 0xef, 0x3c, 0xfa,
	0xec, 0xf1, 0xb8, 0xeb, 0xd1, 0x7d, 0x28, 0x29, 0x4c, 0x87, 0x8b, 0x62, 0x10, 0x6f, 0xb4, 0x25,
	0x57, 0x28, 0xd1, 0x56, 0xba, 0xb4, 0x3c, 0xb6, 0x5d, 0x67, 0x19, 0x5a, 0xcb, 0x43, 0x8d, 0x64,
	0x0b, 0xa3, 0x03, 0x18, 0xce, 0x50, 0x99, 0xec, 0x4a, 0x08, 0xe8, 0x13, 0xde, 0x50, 0x33, 0x35,
	0xc7, 0x27, 0xbf, 0x3d, 0xf0, 0xd9, 0x6a, 0x86, 0xe6, 0x3a, 0xcf, 0x50, 0xbc, 0x05, 0xff, 0x74,
	0x4d, 0x3a, 0xd3, 0x45, 0xb5, 0x42, 0x42, 0xb1, 0xd3, 0x34, 0xea, 0x3c, 0xc2, 0xdd, 0x4e, 0xdf,
	0xd1, 0xd1, 0x97, 0x1f, 0x3f, 0xbf, 0xf5, 0x1e, 0x88, 0x7d, 0x77, 0x55, 0x36, 0x51, 0xff, 0xd4,
	0x27, 0x9f, 0xea, 0xdf, 0x7c, 0x16, 0x53, 0x18, 0x9f, 0xad, 0x57, 0x1f, 0x2f, 0xca, 0x05, 0xde,
	0x88, 0xae, 0x49, 0x78, 0xbf, 0xa1, 0xba, 0xa3, 0x45, 0x82, 0xfd, 0xfd, 0x68, 0xbb, 0xf1, 0x7f,
	0xe1, 0x3d, 0x11, 0xa7, 0xb0, 0xf5, 0x0a, 0x49, 0xdc, 0x8d, 0xdd, 0x59, 0xc6, 0xed, 0x59, 0xc6,
	0x2f, 0xeb, 0xb3, 0xfc, 0x5f, 0x97, 0x77, 0xd8, 0x65, 0x2c, 0x5a, 0x97, 0xf9, 0x90, 0x25, 0xcf,
	0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0xf8, 0x14, 0xa3, 0x4c, 0x12, 0x04, 0x00, 0x00,
}
